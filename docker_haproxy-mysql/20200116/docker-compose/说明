通常情况下，haproxy直接连接mysql集群，是会用在pxc架构方案中的，因为此时每一个mysql数据库都是可读可写的，haproxy要做的就是负载均衡和高可用，一个请求到haproxy后，它将连接转发到哪个mysql都可以，之道最后连接被释放，在释放之前它可以一直保持连接的对应关系。基于此，再上一层是mycat做分库分表。
pxc方案：应用-->mycat-->haproxy-->mysql集群(pxc同步方案).


而如果是主从复制方案，通常是mycat直接连接mysql集群，因为其可以指定那些请求走读库，那些请求走写库，并且还要支持连接的事务。还有读的负载均衡。
主从复制方案：应用-->haproxy-->mycat-->mysql集群(主从复制方案)。



如果再有分库分表需求，则方案另说，另外考虑设计。不在本次讨论范围内。
暂时考虑即使加上分库分表，也可以是现在的方案。只是mycat配置更复杂一点而已。